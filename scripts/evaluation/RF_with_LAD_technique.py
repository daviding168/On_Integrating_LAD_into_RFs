from scripts.utility.change_directory_and_delete_file import \
    change_directory_and_delete_all_input_and_output_hypergraph_files_for_binary_dataset_RF
# classic RF sklearn
from scripts.evaluation.evaluation_RF_sklearn import \
    evaluation_RF_sklearn
# RF using tree generated by minimum support sets of LAD
from scripts.evaluation.evaluation_RF_using_DTs_from_LAD import evaluation_RF_using_DTs_from_LAD


def write_single_result_for_RF_using_LAD_based_technique(dataset_name, max_depth, k_fold, n_repeats, seed):
    print("Running RF sklearn....")
    avg_acc_rf_sklearn, std_value_rf_sklearn, list_acc_rf_sklearn, list_random_idx_sklearn, nb_instance_for_explanation_rf_sklearn, list_size_of_explanation_abd_rf_sklearn, list_total_time_abd_rf_sklearn, list_size_of_explanation_con_rf_sklearn, list_total_time_con_rf_sklearn, avg_nodes_rf_sklearn, avg_features_rf_sklearn, avg_duration_rf_sklearn = evaluation_RF_sklearn(
        dataset_name=dataset_name,
        max_depth=max_depth,
        k_fold=k_fold, n_repeats=n_repeats,
        seed=seed)

    print("Running RF using DTs generated by LAD with majority votes strategy....")
    # majority votes strategy
    (avg_acc_lad_majority_votes, std_value_lad_majority_votes, list_acc_lad_majority_votes, list_random_idx_lad_majority_votes,
     nb_instance_for_explanation_lad_majority_votes, list_size_of_explanation_abd_lad_majority_votes,
     list_total_time_abd_lad_majority_votes, list_size_of_explanation_con_lad_majority_votes,
     list_total_time_con_lad_majority_votes, avg_length_subset_lad_majority_votes, avg_nodes_lad_majority_votes,
     avg_num_features_lad_majority_votes, avg_time_MHSes_lad_majority_votes, avg_time_subsets_ranking_lad_majority_votes,
     avg_time_lad_majority_votes, avg_time_rf_lad_majority_votes) = evaluation_RF_using_DTs_from_LAD(
        dataset_name=dataset_name, max_depth=max_depth,
        voting_method="majority_votes", k_fold=k_fold,
        n_repeats=n_repeats, seed=seed)

    # delete all temporary files of RF using Decision tree of LAD method
    change_directory_and_delete_all_input_and_output_hypergraph_files_for_binary_dataset_RF(
        dataset_name=dataset_name,
        max_depth=max_depth)

    print("Running RF using DTs generated by LAD with soft votes strategy....")
    # soft votes strategy
    (avg_acc_lad_soft_votes, std_value_lad_soft_votes, list_acc_lad_soft_votes, list_random_idx_lad_soft_votes,
     nb_instance_for_explanation_lad_soft_votes, list_size_of_explanation_abd_lad_soft_votes, list_total_time_abd_lad_soft_votes,
     list_size_of_explanation_con_lad_soft_votes, list_total_time_con_lad_soft_votes, avg_length_subset_lad_soft_votes,
     avg_nodes_lad_soft_votes, avg_num_features_lad_soft_votes, avg_time_MHSes_lad_soft_votes,
     avg_time_subsets_ranking_lad_soft_votes,
     avg_time_lad_soft_votes, avg_time_rf_lad_soft_votes) = evaluation_RF_using_DTs_from_LAD(
        dataset_name=dataset_name, max_depth=max_depth,
        voting_method="soft_votes", k_fold=k_fold,
        n_repeats=n_repeats, seed=seed)

    write_output_results_path = "output_pmmcs/" + dataset_name + "/max_depth_" + str(
        max_depth) + "/results_RF_depth_" + str(max_depth) + "_after_" + str(
        k_fold) + "_folds_and_" + str(n_repeats) + "_repeats.txt"

    with open(write_output_results_path, "w") as output_results:
        output_results.write("######################################################################\n"
                             "#                      RF sklearn summary results                          #\n"
                             "######################################################################\n")
        output_results.write("avg_acc_rf_sklearn: " + str(avg_acc_rf_sklearn) + "\n")
        output_results.write("standard deviation: " + str(std_value_rf_sklearn) + "\n")
        output_results.write("list_acc_rf_sklearn: " + str(list_acc_rf_sklearn) + "\n")
        output_results.write("avg total number of nodes in a sklearn-forest: " + str(avg_nodes_rf_sklearn) + "\n")
        output_results.write(
            "avg total number of features used in a sklearn-forest: " + str(avg_features_rf_sklearn) + "\n")
        output_results.write("avg_time: " + str(avg_duration_rf_sklearn) + "\n")
        output_results.write(
            "nb_instance_for_explanation_rf_sklearn: " + str(nb_instance_for_explanation_rf_sklearn) + "\n")
        output_results.write("list of index to explain: " + str(list_random_idx_sklearn) + "\n\n")

        output_results.write("################### Abductive Explanation ###################" + "\n")
        output_results.write(
            "list_size_of_explanation_AXp_rf_sklearn: " + str(list_size_of_explanation_abd_rf_sklearn) + "\n")
        output_results.write("min_size_AXp: " + str(min(list_size_of_explanation_abd_rf_sklearn)) + "\n")
        output_results.write("max_size_AXp: " + str(max(list_size_of_explanation_abd_rf_sklearn)) + "\n")
        output_results.write("avg_size_AXp: " + str(
            sum(list_size_of_explanation_abd_rf_sklearn) / len(list_size_of_explanation_abd_rf_sklearn)) + "\n")
        output_results.write("list_time_AXp: " + str(list_total_time_abd_rf_sklearn) + "\n")
        output_results.write("min_time_AXp: " + str(min(list_total_time_abd_rf_sklearn)) + "\n")
        output_results.write("max_time_AXp: " + str(max(list_total_time_abd_rf_sklearn)) + "\n")
        output_results.write(
            "avg_time_AXp: " + str(sum(list_total_time_abd_rf_sklearn) / len(list_total_time_abd_rf_sklearn)) + "\n\n")

        output_results.write("################### Contrastive Explanation ###################" + "\n")
        output_results.write(
            "list_size_of_explanation_CXp_rf_sklearn: " + str(list_size_of_explanation_con_rf_sklearn) + "\n")
        output_results.write("min_size_CXp: " + str(min(list_size_of_explanation_con_rf_sklearn)) + "\n")
        output_results.write("max_size_CXp: " + str(max(list_size_of_explanation_con_rf_sklearn)) + "\n")
        output_results.write("avg_size_CXp: " + str(
            sum(list_size_of_explanation_con_rf_sklearn) / len(list_size_of_explanation_con_rf_sklearn)) + "\n")
        output_results.write("list_time_CXp: " + str(list_total_time_con_rf_sklearn) + "\n")
        output_results.write("min_time_CXp: " + str(min(list_total_time_con_rf_sklearn)) + "\n")
        output_results.write("max_time_CXp: " + str(max(list_total_time_con_rf_sklearn)) + "\n")
        output_results.write(
            "avg_time_CXp: " + str(sum(list_total_time_con_rf_sklearn) / len(list_total_time_con_rf_sklearn)) + "\n\n")

        output_results.write("######################################################################\n"
                             f"#           RF using DTs generated by LAD with majority votes       #\n"
                             "######################################################################\n")

        output_results.write("avg test accuracy: " + str(avg_acc_lad_majority_votes) + "\n")
        output_results.write("standard deviation: " + str(std_value_lad_majority_votes) + "\n")
        output_results.write("list_acc_lad_majority_votes: " + str(list_acc_lad_majority_votes) + "\n")
        output_results.write("nb_instance_for_explanation_lad_majority_votes: " + str(
            nb_instance_for_explanation_lad_majority_votes) + "\n")
        output_results.write("list of index to explain: " + str(list_random_idx_lad_majority_votes) + "\n\n")

        output_results.write("avg total number of nodes in a lad-forest: " + str(avg_nodes_lad_majority_votes) + "\n")
        output_results.write(
            "avg total number of features used in a forest: " + str(avg_num_features_lad_majority_votes) + "\n")
        output_results.write("avg time for rf: " + str(avg_time_rf_lad_majority_votes) + "\n\n")
        output_results.write("avg time for generating 100000 MHSes: " + str(avg_time_MHSes_lad_majority_votes) + "\n")
        output_results.write(
            "avg time for randomly selecting LAD subsets: " + str(avg_time_subsets_ranking_lad_majority_votes) + "\n")
        output_results.write("avg time for lad: " + str(avg_time_lad_majority_votes) + "\n")
        output_results.write("avg length of subset/support set for each tree before constructing: " + str(
            avg_length_subset_lad_majority_votes) + "\n\n")

        output_results.write("################### Abductive Explanation ###################" + "\n")
        output_results.write("list_size_of_explanation_AXp_lad_majority_votes: " + str(
            list_size_of_explanation_abd_lad_majority_votes) + "\n")
        output_results.write(
            "min_size_AXp_lad_majority_votes: " + str(min(list_size_of_explanation_abd_lad_majority_votes)) + "\n")
        output_results.write(
            "max_size_AXp_lad_majority_votes: " + str(max(list_size_of_explanation_abd_lad_majority_votes)) + "\n")
        output_results.write("avg_size_AXp_lad_majority_votes: " + str(
            sum(list_size_of_explanation_abd_lad_majority_votes) / len(
                list_size_of_explanation_abd_lad_majority_votes)) + "\n")

        output_results.write("list_time_AXp_lad_majority_votes: " + str(list_total_time_abd_lad_majority_votes) + "\n")
        output_results.write(
            "min_time_AXp_lad_majority_votes: " + str(min(list_total_time_abd_lad_majority_votes)) + "\n")
        output_results.write(
            "max_time_AXp_lad_majority_votes: " + str(max(list_total_time_abd_lad_majority_votes)) + "\n")
        output_results.write("avg_time_AXp_lad_majority_votes: " + str(
            sum(list_total_time_abd_lad_majority_votes) / len(list_total_time_abd_lad_majority_votes)) + "\n\n")

        output_results.write("################### Contrastive Explanation ###################" + "\n")
        output_results.write(
            "list_size_of_explanation_CXp_majority_votes: " + str(
                list_size_of_explanation_con_lad_majority_votes) + "\n")
        output_results.write(
            "min_size_CXp_majority_votes: " + str(min(list_size_of_explanation_con_lad_majority_votes)) + "\n")
        output_results.write(
            "max_size_CXp_majority_votes: " + str(max(list_size_of_explanation_con_lad_majority_votes)) + "\n")
        output_results.write("avg_size_CXp_majority_votes: " + str(
            sum(list_size_of_explanation_con_lad_majority_votes) / len(
                list_size_of_explanation_con_lad_majority_votes)) + "\n")
        output_results.write("list_time_CXp_majority_votes: " + str(list_total_time_con_lad_majority_votes) + "\n")
        output_results.write("min_time_CXp_majority_votes: " + str(min(list_total_time_con_lad_majority_votes)) + "\n")
        output_results.write("max_time_CXp_majority_votes: " + str(max(list_total_time_con_lad_majority_votes)) + "\n")
        output_results.write("avg_time_CXp_majority_votes: " + str(
            sum(list_total_time_con_lad_majority_votes) / len(list_total_time_con_lad_majority_votes)) + "\n\n")

        output_results.write("######################################################################\n"
                             f"#           RF using DTs generated by LAD with soft votes           #\n"
                             "######################################################################\n")

        output_results.write("avg test accuracy: " + str(avg_acc_lad_soft_votes) + "\n")
        output_results.write("standard deviation: " + str(std_value_lad_soft_votes) + "\n")
        output_results.write("list_acc_lad_soft_votes: " + str(list_acc_lad_soft_votes) + "\n")
        output_results.write("nb_instance_for_explanation_lad_soft_votes: " + str(
            nb_instance_for_explanation_lad_soft_votes) + "\n")
        output_results.write("list of index to explain: " + str(list_random_idx_lad_soft_votes) + "\n\n")

        output_results.write("avg total number of nodes in a lad-forest: " + str(avg_nodes_lad_soft_votes) + "\n")
        output_results.write(
            "avg total number of features used in a forest: " + str(avg_num_features_lad_soft_votes) + "\n")
        output_results.write("avg time for rf: " + str(avg_time_rf_lad_soft_votes) + "\n\n")
        output_results.write("avg time for generating 100000 MHSes: " + str(avg_time_MHSes_lad_soft_votes) + "\n")
        output_results.write(
            "avg time for randomly selecting LAD subsets: " + str(avg_time_subsets_ranking_lad_soft_votes) + "\n")
        output_results.write("avg time for lad: " + str(avg_time_lad_soft_votes) + "\n")
        output_results.write("avg length of subset/support set for each tree before constructing: " + str(
            avg_length_subset_lad_soft_votes) + "\n\n")

        output_results.write("################### Abductive Explanation ###################" + "\n")
        output_results.write("list_size_of_explanation_AXp_lad_soft_votes: " + str(
            list_size_of_explanation_abd_lad_soft_votes) + "\n")
        output_results.write(
            "min_size_AXp_lad_soft_votes: " + str(min(list_size_of_explanation_abd_lad_soft_votes)) + "\n")
        output_results.write(
            "max_size_AXp_lad_soft_votes: " + str(max(list_size_of_explanation_abd_lad_soft_votes)) + "\n")
        output_results.write("avg_size_AXp_lad_soft_votes: " + str(
            sum(list_size_of_explanation_abd_lad_soft_votes) / len(
                list_size_of_explanation_abd_lad_soft_votes)) + "\n")

        output_results.write("list_time_AXp_lad_soft_votes: " + str(list_total_time_abd_lad_soft_votes) + "\n")
        output_results.write(
            "min_time_AXp_lad_soft_votes: " + str(min(list_total_time_abd_lad_soft_votes)) + "\n")
        output_results.write(
            "max_time_AXp_lad_soft_votes: " + str(max(list_total_time_abd_lad_soft_votes)) + "\n")
        output_results.write("avg_time_AXp_lad_soft_votes: " + str(
            sum(list_total_time_abd_lad_soft_votes) / len(list_total_time_abd_lad_soft_votes)) + "\n\n")

        output_results.write("################### Contrastive Explanation ###################" + "\n")
        output_results.write(
            "list_size_of_explanation_CXp_soft_votes: " + str(
                list_size_of_explanation_con_lad_soft_votes) + "\n")
        output_results.write(
            "min_size_CXp_soft_votes: " + str(min(list_size_of_explanation_con_lad_soft_votes)) + "\n")
        output_results.write(
            "max_size_CXp_soft_votes: " + str(max(list_size_of_explanation_con_lad_soft_votes)) + "\n")
        output_results.write("avg_size_CXp_soft_votes: " + str(
            sum(list_size_of_explanation_con_lad_soft_votes) / len(
                list_size_of_explanation_con_lad_soft_votes)) + "\n")
        output_results.write("list_time_CXp_soft_votes: " + str(list_total_time_con_lad_soft_votes) + "\n")
        output_results.write("min_time_CXp_soft_votes: " + str(min(list_total_time_con_lad_soft_votes)) + "\n")
        output_results.write("max_time_CXp_soft_votes: " + str(max(list_total_time_con_lad_soft_votes)) + "\n")
        output_results.write("avg_time_CXp_soft_votes: " + str(
            sum(list_total_time_con_lad_soft_votes) / len(list_total_time_con_lad_soft_votes)) + "\n\n")

        # delete all temporary files of LAD method
        change_directory_and_delete_all_input_and_output_hypergraph_files_for_binary_dataset_RF(
            dataset_name=dataset_name,
            max_depth=max_depth)
        print("Finished writing results...\n\n\n")

    print(f"After {k_fold} cross validations with {n_repeats} repetitions:")
    print(f"For dataset {dataset_name} using depth={max_depth}:\n")

    print("######################################################################\n"
          "#                      RF sklearn summary results                          #\n"
          "######################################################################\n")
    print("avg_acc_rf_sklearn: " + str(avg_acc_rf_sklearn) + "\n")
    print("standard deviation: " + str(std_value_rf_sklearn) + "\n")
    print("list_acc_rf_sklearn: " + str(list_acc_rf_sklearn) + "\n")
    print("avg total number of nodes in a sklearn-forest: " + str(avg_nodes_rf_sklearn) + "\n")
    print(
        "avg total number of features used in a sklearn-forest: " + str(avg_features_rf_sklearn) + "\n")
    print("avg_time: " + str(avg_duration_rf_sklearn) + "\n")

    print(
        "nb_instance_for_explanation_rf_sklearn: " + str(nb_instance_for_explanation_rf_sklearn) + "\n")
    print("list of index to explain: " + str(list_random_idx_sklearn) + "\n\n")

    print("################### Abductive Explanation ###################" + "\n")
    print(
        "list_size_of_explanation_AXp_rf_sklearn: " + str(list_size_of_explanation_abd_rf_sklearn) + "\n")
    print("min_size_AXp: " + str(min(list_size_of_explanation_abd_rf_sklearn)) + "\n")
    print("max_size_AXp: " + str(max(list_size_of_explanation_abd_rf_sklearn)) + "\n")
    print("avg_size_AXp: " + str(
        sum(list_size_of_explanation_abd_rf_sklearn) / len(list_size_of_explanation_abd_rf_sklearn)) + "\n")
    print("list_time_AXp: " + str(list_total_time_abd_rf_sklearn) + "\n")
    print("min_time_AXp: " + str(min(list_total_time_abd_rf_sklearn)) + "\n")
    print("max_time_AXp: " + str(max(list_total_time_abd_rf_sklearn)) + "\n")
    print(
        "avg_time_AXp: " + str(sum(list_total_time_abd_rf_sklearn) / len(list_total_time_abd_rf_sklearn)) + "\n\n")

    print("################### Contrastive Explanation ###################" + "\n")
    print(
        "list_size_of_explanation_CXp_rf_sklearn: " + str(list_size_of_explanation_con_rf_sklearn) + "\n")
    print("min_size_CXp: " + str(min(list_size_of_explanation_con_rf_sklearn)) + "\n")
    print("max_size_CXp: " + str(max(list_size_of_explanation_con_rf_sklearn)) + "\n")
    print("avg_size_CXp: " + str(
        sum(list_size_of_explanation_con_rf_sklearn) / len(list_size_of_explanation_con_rf_sklearn)) + "\n")
    print("list_time_CXp: " + str(list_total_time_con_rf_sklearn) + "\n")
    print("min_time_CXp: " + str(min(list_total_time_con_rf_sklearn)) + "\n")
    print("max_time_CXp: " + str(max(list_total_time_con_rf_sklearn)) + "\n")
    print(
        "avg_time_CXp: " + str(sum(list_total_time_con_rf_sklearn) / len(list_total_time_con_rf_sklearn)) + "\n\n")

    print("######################################################################\n"
          f"#           RF using DTs generated by LAD with majority votes       #\n"
          "######################################################################\n")

    print("avg test accuracy: " + str(avg_acc_lad_majority_votes) + "\n")
    print("standard deviation: " + str(std_value_lad_majority_votes) + "\n")
    print("list_acc_lad_majority_votes: " + str(list_acc_lad_majority_votes) + "\n")
    print("nb_instance_for_explanation_lad_majority_votes: " + str(
        nb_instance_for_explanation_lad_majority_votes) + "\n")
    print("list of index to explain: " + str(list_random_idx_lad_majority_votes) + "\n\n")

    print("avg total number of nodes in a lad-forest: " + str(avg_nodes_lad_majority_votes) + "\n")
    print(
        "avg total number of features used in a forest: " + str(avg_num_features_lad_majority_votes) + "\n")
    print("avg time for rf: " + str(avg_time_rf_lad_majority_votes) + "\n\n")
    print("avg time for generating 100000 MHSes: " + str(avg_time_MHSes_lad_majority_votes) + "\n")
    print(
        "avg time for randomly selecting LAD subsets: " + str(avg_time_subsets_ranking_lad_majority_votes) + "\n")
    print("avg time for lad: " + str(avg_time_lad_majority_votes) + "\n")
    print("avg length of subset/support set for each tree before constructing: " + str(
        avg_length_subset_lad_majority_votes) + "\n\n")

    print("################### Abductive Explanation ###################" + "\n")
    print("list_size_of_explanation_AXp_lad_majority_votes: " + str(
        list_size_of_explanation_abd_lad_majority_votes) + "\n")
    print(
        "min_size_AXp_lad_majority_votes: " + str(min(list_size_of_explanation_abd_lad_majority_votes)) + "\n")
    print(
        "max_size_AXp_lad_majority_votes: " + str(max(list_size_of_explanation_abd_lad_majority_votes)) + "\n")
    print("avg_size_AXp_lad_majority_votes: " + str(
        sum(list_size_of_explanation_abd_lad_majority_votes) / len(
            list_size_of_explanation_abd_lad_majority_votes)) + "\n")

    print("list_time_AXp_lad_majority_votes: " + str(list_total_time_abd_lad_majority_votes) + "\n")
    print(
        "min_time_AXp_lad_majority_votes: " + str(min(list_total_time_abd_lad_majority_votes)) + "\n")
    print(
        "max_time_AXp_lad_majority_votes: " + str(max(list_total_time_abd_lad_majority_votes)) + "\n")
    print("avg_time_AXp_lad_majority_votes: " + str(
        sum(list_total_time_abd_lad_majority_votes) / len(list_total_time_abd_lad_majority_votes)) + "\n\n")

    print("################### Contrastive Explanation ###################" + "\n")
    print(
        "list_size_of_explanation_CXp_majority_votes: " + str(
            list_size_of_explanation_con_lad_majority_votes) + "\n")
    print(
        "min_size_CXp_majority_votes: " + str(min(list_size_of_explanation_con_lad_majority_votes)) + "\n")
    print(
        "max_size_CXp_majority_votes: " + str(max(list_size_of_explanation_con_lad_majority_votes)) + "\n")
    print("avg_size_CXp_majority_votes: " + str(
        sum(list_size_of_explanation_con_lad_majority_votes) / len(
            list_size_of_explanation_con_lad_majority_votes)) + "\n")
    print("list_time_CXp_majority_votes: " + str(list_total_time_con_lad_majority_votes) + "\n")
    print("min_time_CXp_majority_votes: " + str(min(list_total_time_con_lad_majority_votes)) + "\n")
    print("max_time_CXp_majority_votes: " + str(max(list_total_time_con_lad_majority_votes)) + "\n")
    print("avg_time_CXp_majority_votes: " + str(
        sum(list_total_time_con_lad_majority_votes) / len(list_total_time_con_lad_majority_votes)) + "\n\n")

    print("######################################################################\n"
          f"#           RF using DTs generated by LAD with soft votes           #\n"
          "######################################################################\n")

    print("avg test accuracy: " + str(avg_acc_lad_soft_votes) + "\n")
    print("standard deviation: " + str(std_value_lad_soft_votes) + "\n")
    print("list_acc_lad_soft_votes: " + str(list_acc_lad_soft_votes) + "\n")
    print("nb_instance_for_explanation_lad_soft_votes: " + str(nb_instance_for_explanation_lad_soft_votes) + "\n")
    print("list of index to explain: " + str(list_random_idx_lad_soft_votes) + "\n\n")

    print("avg total number of nodes in a lad-forest: " + str(avg_nodes_lad_soft_votes) + "\n")
    print(
        "avg total number of features used in a forest: " + str(avg_num_features_lad_soft_votes) + "\n")
    print("avg time for rf: " + str(avg_time_rf_lad_soft_votes) + "\n\n")
    print("avg time for generating 100000 MHSes: " + str(avg_time_MHSes_lad_soft_votes) + "\n")
    print(
        "avg time for randomly selecting LAD subsets: " + str(avg_time_subsets_ranking_lad_soft_votes) + "\n")
    print("avg time for lad: " + str(avg_time_lad_soft_votes) + "\n")
    print("avg length of subset/support set for each tree before constructing: " + str(
        avg_length_subset_lad_soft_votes) + "\n\n")

    print("################### Abductive Explanation ###################" + "\n")
    print("list_size_of_explanation_AXp_lad_soft_votes: " + str(
        list_size_of_explanation_abd_lad_soft_votes) + "\n")
    print(
        "min_size_AXp_lad_soft_votes: " + str(min(list_size_of_explanation_abd_lad_soft_votes)) + "\n")
    print(
        "max_size_AXp_lad_soft_votes: " + str(max(list_size_of_explanation_abd_lad_soft_votes)) + "\n")
    print("avg_size_AXp_lad_soft_votes: " + str(
        sum(list_size_of_explanation_abd_lad_soft_votes) / len(
            list_size_of_explanation_abd_lad_soft_votes)) + "\n")

    print("list_time_AXp_lad_soft_votes: " + str(list_total_time_abd_lad_soft_votes) + "\n")
    print(
        "min_time_AXp_lad_soft_votes: " + str(min(list_total_time_abd_lad_soft_votes)) + "\n")
    print(
        "max_time_AXp_lad_soft_votes: " + str(max(list_total_time_abd_lad_soft_votes)) + "\n")
    print("avg_time_AXp_lad_soft_votes: " + str(
        sum(list_total_time_abd_lad_soft_votes) / len(list_total_time_abd_lad_soft_votes)) + "\n\n")

    print("################### Contrastive Explanation ###################" + "\n")
    print(
        "list_size_of_explanation_CXp_soft_votes: " + str(
            list_size_of_explanation_con_lad_soft_votes) + "\n")
    print(
        "min_size_CXp_soft_votes: " + str(min(list_size_of_explanation_con_lad_soft_votes)) + "\n")
    print(
        "max_size_CXp_soft_votes: " + str(max(list_size_of_explanation_con_lad_soft_votes)) + "\n")
    print("avg_size_CXp_soft_votes: " + str(
        sum(list_size_of_explanation_con_lad_soft_votes) / len(
            list_size_of_explanation_con_lad_soft_votes)) + "\n")
    print("list_time_CXp_soft_votes: " + str(list_total_time_con_lad_soft_votes) + "\n")
    print("min_time_CXp_soft_votes: " + str(min(list_total_time_con_lad_soft_votes)) + "\n")
    print("max_time_CXp_soft_votes: " + str(max(list_total_time_con_lad_soft_votes)) + "\n")
    print("avg_time_CXp_soft_votes: " + str(
        sum(list_total_time_con_lad_soft_votes) / len(list_total_time_con_lad_soft_votes)) + "\n\n")
